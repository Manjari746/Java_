import java.util.Stack;
public class Solution {

    public static boolean isBalanced(String expression) {
        //Your code goes here
        
         Stack <Character> s = new Stack<>();
        String bracket= expression;

        for(int i =0; i< bracket.length(); i++){
            if(bracket.charAt(i)=='('){
                s.push('(');
            }
            else{
                if(s.isEmpty()){
                    return false;
                }
                else{
                    if(s.peek()=='('){
                        s.pop();
                    }
                }
            }
        }

        if(!s.isEmpty()){
            return false;
        }
        return true;
    }

    //2nd way
    //      Stack <String> stack = new Stack<>();
    //     for( int i = 0 ; i< bracket.length(); i++){
    //         if( bracket.charAt(i) =='('  ){
    //             stack.push("(");
    //         }
    //         else if(bracket.charAt(i) =='{' ){
    //             stack.push("{");
    //         }
    //         else if(bracket.charAt(i) =='[' ){
    //             stack.push("[");
    //         }
    //         else if( bracket.charAt(i) ==')' ){
    //             if(stack.size()>0 && stack.peek()=="("){
    //                 stack.pop();
    //             }
    //             else
    //                 return false;
    //         }
    //         else if (bracket.charAt(i) =='}' ){
    //            if(stack.size()>0 && stack.peek()=="{"){
    //                 stack.pop();
    //             }
    //            else
    //                 return false;
    //         }
    //         else if(bracket.charAt(i) ==']'  ){
    //             if(stack.size()>0 && stack.peek()=="["){
    //                 stack.pop();
    //             }
    //            else
    //                 return false;
    //         }
            
            
    //     }
    //     if( stack.size() == 0)
    //         return true ;
    //     else
    //         return false;
    // }
}
