public class Solution {
   
    public static LinkedListNode<Integer> sortedLL(LinkedListNode<Integer> head1,LinkedListNode<Integer> head2){
             
        if(head1==null){
            return head2;
        }
        
        if(head2==null){
            return head1;
        }
        
        LinkedListNode<Integer> t1=head1;
        LinkedListNode<Integer> t2=head2;
        LinkedListNode<Integer> head=null;
        LinkedListNode<Integer> tail=null;
        
       if(t1.data<t2.data){
           head=t1;
           tail=t1;
           t1=t1.next;
       }
       else{
           head=t2;
           tail=t2;
           t2=t2.next;
       } 
       
        while(t1!=null && t2!=null){
            if(t1.data<t2.data){
               tail.next=t1;
               tail=t1;
               t1=t1.next;
            }else{
               tail.next=t2;
                tail=t2;
                t2=t2.next;
            }
        }
        if(t1!=null){
            tail.next=t1;
        }
        
        else{
            tail.next=t2;
        }
        
        return head;
        
    }
    public static LinkedListNode<Integer> midPoint(LinkedListNode<Integer> head){
        
        LinkedListNode<Integer> fast=head;
        LinkedListNode<Integer> slow=head;
        
        while(fast.next!=null && fast.next.next!=null){
            fast=fast.next.next;
            slow=slow.next;
        }
        
        return slow;
    }
	public static LinkedListNode<Integer> mergeSort(LinkedListNode<Integer> head) {
		//Your code goes here
        if(head==null || head.next==null){
            return head;
        }
        
        LinkedListNode<Integer> mid=midPoint(head);
        LinkedListNode<Integer> midNext=mid.next;
        mid.next=null;
        
        LinkedListNode<Integer> left=mergeSort(head);
        LinkedListNode<Integer> right=mergeSort(midNext);
        
        
        LinkedListNode<Integer> ans=sortedLL(left,right);
        return ans;
        
        	
        
	}

}