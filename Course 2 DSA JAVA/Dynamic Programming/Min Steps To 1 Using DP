/*************************  RECURSION   ********************/
public class Solution {

	public static int countMinStepsToOne(int n) {
		//Your code goes here
        if (n <= 1){
            return 0;
        }
        
       int ans1 = countMinStepsToOne(n-1);
       int ans2 = Integer.MAX_VALUE;
       int ans3 = Integer.MAX_VALUE;
        
       if (n%2==0){
           ans2 = countMinStepsToOne(n/2);
       }
           
       if (n%3==0){
           ans3 = countMinStepsToOne(n/3);
       }
         
       return Math.min(Math.min(ans2,ans3),ans1)+1;
	}
}

/*************************  DP  ************************/

public class Solution {

	public static int countMinStepsToOne(int n) {
		//Your code goes here
		if( n<=1){
			return 0;
		}
		int dp [ ]= new int [ n+1];
		dp[0]=0;
		dp [1]= 0;
		dp[2]= 1;
		for(int i = 3; i<=n; i++){
			int ans2 = Integer.MAX_VALUE;
			int ans3 = Integer.MAX_VALUE;
			if( i%2==0){
				ans2 = dp[i/2];
			}
			if(i%3==0){
				ans3= dp[i/3];
			}
			dp[i]= Math.min(dp[i-1],Math.min(ans2, ans3))+1;
		}

return dp[n];

	}

}
