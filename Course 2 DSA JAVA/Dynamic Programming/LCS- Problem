public class Solution {

	public static int lcsdp(String str1, String str2, int i,int j , int dp[][]){

		if (i == str1.length() || j == str2.length()) {
			return 0;
		}

		int myAns;
		if (str1.charAt(i) == str2.charAt(j)) {
			int smallAns;
			if(dp[i+1][j+1]==-1){
			smallAns = lcsdp(str1, str2, i + 1, j + 1,dp);
			dp[i+1][j+1]= smallAns;
			}
			else{
				smallAns= dp[i+1][j+1];
			}
			
			myAns = 1 + smallAns;
			
		} 
		
		else {
			int ans1, ans2;
			if(dp[i+1][j]==-1){
			 ans1 = lcsdp(str1, str2, i + 1, j, dp);
			 dp[i+1][j]= ans1;
			}else{
				ans1= dp[i+1][j];
			}
			if(dp[i][j+1]==-1){
			 ans2 = lcsdp(str1, str2, i, j + 1,dp);
			 dp[i][j+1]= ans2;
			}
			else{
				ans2=dp[i][j+1];
			}
			myAns = Math.max(ans1, ans2);
		}
		return myAns;
	
	}

	public static int lcs(String s, String t) {
		//Your code goes here
		int dp[][]= new int [s.length()+1][t.length()+1];
		for( int i=0; i<= s.length(); i++)
		{
			for( int j =0; j<=t.length();j++){
				dp[i][j]=-1;
			}
		}
	return	lcsdp(s, t, 0, 0, dp);
		// return lcshelper( s, t, 0,0);
    }
}



