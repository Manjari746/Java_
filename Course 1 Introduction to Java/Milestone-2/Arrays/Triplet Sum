
// public class Solution {
    
//     public static int findTriplet(int[] arr, int x) {
//     	//Your code goes here
//         int count =0;
//         int n= arr.length;
//         for ( int i =0; i<=n-3; i++){
//             for( int j =i+1; j<=n-2; j++){
//                 for( int k = j+1; k<=n-1;k++){
//                     if( arr[i]+arr[j]+arr[k]==x)
//                     {
//                         //System.out.println(arr[i]+" "+arr[j]+" "+arr[k]);
//                        count++;
//                     }
//                 }
//             }
//         }
        
//         return count;
//     }

// }

//********************BETTER APPROACH*******************************
public class Solution {	
public static void sort(int[]arr)
{
	int i =0;
	int len = arr.length;

	while(i<len-1)
	{
		int j =i;
		while(j>=0){
		if(arr[j]<arr[j+1])
		break;

		if(arr[j]>arr[j+1])
		{
			int temp =arr[j];
			arr[j]=arr[j+1];
			arr[j+1]=temp;
		}
		j--;
	}
	i++;
	}
}
	public static int findTriplet(int[] arr, int x) {
		//Your code goes here
		int len = arr.length;
		int i =0;
		int count=0;
		// sort(arr);
		 while(i<=len-3)
		 {
			 int sum=0;
			 
			int j =i+1;
			
			 while(j<=len-2)
			 {
				 int k =j+1;
				 while(k<=len-1)
				 {
					 sum = arr[i]+arr[j]+arr[k];
					 if(sum==x)
					 {
						 count++;
					 }
					 k++;
				 }
				 j++;
			 }
			 i++;
		 }
		 return count;
	}
}
